{
  
    
        "post0": {
            "title": "Chess Quiz two",
            "content": "Quiz = ({ &quot;How many spaces can a pawn move on its first turn?&quot;: &quot;2&quot;, &quot;How many spaces can a pawn move on its second turn?&quot;: &quot;1&quot;, &quot;How many pawns exist on one side inn a chess game?&quot;: &quot;8&quot; }) correct = 0 for key, value in Quiz.items(): questions = input(key) if questions == value: print(&quot;Correct&quot;) correct+=1 else: print(&quot;Incorrect&quot;) print(&quot;Score: &quot;,correct) .",
            "url": "https://henerystone.github.io/ws2/chesscode/chessquiz",
            "relUrl": "/chesscode/chessquiz",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Psycology and the good life",
            "content": "The video talks about stress in a college environment and how to relive the stress that occurs. Stress is most common in college students due to the fact that they are ovewhelmed and anxious. To relive stress, one must take a break from their daily life and take some time to do what one loves. I personally like to take time to read a book or play video games. This helps me relax and destress myself .",
            "url": "https://henerystone.github.io/ws2/psycology/other",
            "relUrl": "/psycology/other",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "API",
            "content": "import requests url = &quot;https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary&quot; x = input(&quot;&quot;) querystring = {&quot;word&quot;:x} headers = { &quot;X-RapidAPI-Key&quot;: &quot;dee5dcce83msh780914d639facb7p1f43c5jsn4c4a7717bb03&quot;, &quot;X-RapidAPI-Host&quot;: &quot;dictionary-by-api-ninjas.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . {&#34;definition&#34;: &#34;See Brite, v. i. n n1. Radiating or reflecting light; shedding or having much light; shining; luminous; not dark. The sun was bright o&#39;erhead. Longfellow. The earth was dark, but the heavens were bright. Drake. The public places were as bright as at noonday. Macaulay. 2. Transmitting light; clear; transparent. From the brightest wines He &#39;d turn abhorrent. Thomson. 3. Having qualities that render conspicuous or attractive, or that affect the mind as light does the eye; resplendent with charms; as, bright beauty. Bright as an angel new-dropped from the sky. Parnell. 4. Having a clear, quick intellect; intelligent. 5. Sparkling with wit; lively; vivacious; shedding cheerfulness and joy around; cheerful; cheery. Be bright and jovial among your guests. Shak. 6. Illustrious; glorious. In the brightest annals of a female reign. Cotton. 7. Manifest to the mind, as light is to the eyes; clear; evident; plain. That he may with more ease, with brighter evidence, and with surer success, draw the bearner on. I. Watts. 8. Of brilliant color; of lively hue or appearance. Here the bright crocus and blue violet grew. Pope. Note: Bright is used in composition in the sense of brilliant, clear, sunny, etc.; as, bright-eyed, bright-haired, bright-hued. Syn. -- Shining; splending; luminous; lustrous; brilliant; resplendent; effulgent; refulgent; radiant; sparkling; glittering; lucid; beamy; clear; transparent; illustrious; witty; clear; vivacious; sunny. n nSplendor; brightness. [Poetic] Dark with excessive bright thy skirts appear. Milton. n nBrightly. Chaucer. I say it is the moon that shines so bright. Shak. n nTo be or become overripe, as wheat, barley, or hops. [Prov. Eng.]&#34;, &#34;word&#34;: &#34;bright&#34;, &#34;valid&#34;: true} .",
            "url": "https://henerystone.github.io/ws2/techtalk/api",
            "relUrl": "/techtalk/api",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Bash Tutorial",
            "content": "Prerequisites for Bash on Jupyter . Being able to find a Bash Reference. Here is a Bash Cheat Sheet&gt; Install the Bash Kernel for Jupyter notebooks. Expectations are pip3 and python3 are defined within the path. The bash shell allowed construction of this tutorial. . pip install bash_kernel | python -m bash_kernel.install | . Selecting a kernel in &quot;code --project--&quot; or &quot;jupyter notebook --file.ipynb--&quot; that have bash in options. . Prerequisites for Project Directory . Practice pulling code from git to your machine. This will create a project directory and add APCSP github project to the directory. There is conditional logic to make sure that directory and pull only happen if it does not (!) exist. . Hack:Change variables, make new directory, clone to that directory. | . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Look inside Fastpages/Github page project . All computers contain files and directories. The clone brought more files from cloud to your machine. Using the bash shell you will see some commands that show and interact with files and directories. . &quot;ls&quot; lists computer files in Unix and Unix-like operating systems | &quot;cd&quot; offers way to navigate and change working directory | &quot;pwd&quot; print working directory | &quot;echo&quot; used to display line of text/string that are passed as an argument | . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look inside a Markdown File . &quot;cat&quot; reads data from the file and gives its content as output . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . Env, Git and GitHub . Env(ironment) is used to capture things like path to Code or Home directory. Git and GitHub is NOT Only used to exchange code between individuals, it is often used to exchange code through servers, in our case deployment for Website. All tools we use have a behind the scenes hav relationship with the system they run on (MacOS, Windows, Linus) or a relationship with servers which they are connected to (ie GitHub). There is an &quot;env&quot; command in bash. There are environment files and setting files (.git/config) for Git. They both use a key/value concept. . &quot;env&quot; show setting for your shell | &quot;git clone&quot; sets up a director of files | &quot;cd $project&quot; allows user to move inside that directory of files | &quot;.git&quot; is a hidden directory that is used by git to establish relationship between machine and the git server on GitHub. | . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . Student Request - Make a file in Bash . This example was requested by a student (Jun Lim, CSA). The request was to make jupyer file using bash, I adapted the request to markdown. This type of thought will have great extrapolation to coding and possibilities of using List, Arrays, or APIs to build user interfaces. JavaScript is a language where building HTML is very common. . To get more interesting output from terminal, this will require using something like mdless (https://github.com/ttscoff/mdless). This enables see markdown in rendered format.- On Desktop Install PKG from MacPorts . In Terminal on MacOS Install ncurses | gem install mdless | . | . Output of the example is much nicer in &quot;jupyter&quot; . cd /tmp file=&quot;sample.md&quot; if [ -f &quot;$file&quot; ]; then rm $file fi tee -a $file &gt;/dev/null &lt;&lt;EOF # Show Generated Markdown This introductory paragraph and this line and the title above are generated using tee with the standard input (&lt;&lt;) redirection operator. - This bulleted element is still part of the tee body. EOF echo &quot;- This bulleted element and lines below are generated using echo with standard output (&gt;&gt;) redirection operator.&quot; &gt;&gt; $file echo &quot;- The list definition, as is, is using space to seperate lines. Thus the use of commas and hyphens in output.&quot; &gt;&gt; $file actions=(&quot;ls,list-directory&quot; &quot;cd,change-directory&quot; &quot;pwd,present-working-directory&quot; &quot;if-then-fi,test-condition&quot; &quot;env,bash-environment-variables&quot; &quot;cat,view-file-contents&quot; &quot;tee,write-to-output&quot; &quot;echo,display-content-of-string&quot; &quot;echo_text_&gt; $file,write-content-to-file&quot; &quot;echo_text_&gt;&gt; $file,append-content-to-file&quot;) for action in ${actions[@]}; do # for loop is very similar to other language, though [@], semi-colon, do are new action=${action//-/ } # convert dash to space action=${action//,/: } # convert comma to colon action=${action//_text_/ &quot;sample text &quot; } # convert _text_ to sample text, note escape character to avoid &quot;&quot; having meaning echo &quot; - ${action//-/ }&quot; &gt;&gt; $file # echo is redirected to file with &gt;&gt; done echo &quot;&quot; echo &quot;File listing and status&quot; ls -l $file # list file wc $file # show words mdless $file # this requires installation, but renders markown from terminal rm $file # clean up termporary file . Hacks . Go back to some of the deployment procedures and think about some thing you could verify through Bash notebook. . Is there anything we use to verify tools we install? Think about versions. | Is there anything we could verify with Anaconda? | How would you update a repository? | Really cool would be automating a procedure from installation. | .",
            "url": "https://henerystone.github.io/ws2/techtalk/bash",
            "relUrl": "/techtalk/bash",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Vocab",
            "content": "Algorithm: At its core, an algorithm is really just a generalized, conceptual solution to a problem that can later be implemented in some real-world form like a computer program. . Application Program Interface : Application program interface (API) is a set of routines, protocols, and tools for constructing software applications. An API specifies how software components should interact. In addition, APIs are used when programming graphical user interface (GUI) components. . Binary : A numeric system of base 2 that only uses combinations of the digits zero and one; this is used in one of the lowest levels of abstraction. Computers operate in binary, as they store data and perform calculations using only zeros and ones. While a single binary digit can be used to represent True (1) or False (0) in boolean logic, multiple binary digits can be used in conjunction to store large numbers and perform complex functions. Computers translate between binary and what you actually work with such as numbers and text. .",
            "url": "https://henerystone.github.io/ws2/2022/11/07/Vocab.html",
            "relUrl": "/2022/11/07/Vocab.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "App Chess quiz",
            "content": "This is a Chess quiz made in Code.org with javascript block code. The chess quiz is a quiz about some of the more advanced principles of chess. It questions the user about all the advanced aspects of chess and some more. The quiz contains 3 questions with interesting pictures and backgrounds, offering a scam prize at the end. A fun and interactive quiz to waste time with. . Steps: . 1) Design - Several &quot;on event&quot; functions that add simplicity in the program. 2) Brainstorm - Brainstorm and come up with the idea of the quiz questions. 3) Implementation - Integrate the quiz questions with the code. 4) Finishing - Clean up the code and finish the program. . Problems: . Technical and understanding issues were frequent:experimentation and brainstorming cleared doubts and problems with code and understanding. . Link to app: . https://studio.code.org/projects/applab/sDfuUPMCN4YWUzTMEib8_75gHe-4DmruDFdt0wbY-7k/edit .",
            "url": "https://henerystone.github.io/ws2/chesscode/app",
            "relUrl": "/chesscode/app",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Quiz",
            "content": "I took the quiz on Monday and felt quite confident about it. On Tuesday, I checked the score and discovered that I had gotten a 44/50 score. This score was brought about by the failure of my mental abilities in six questions. The first one was a question about a video game in which I did not read the question well enough and did not see that I was meant to select two options. The second question was related to lists and data abstraction. I messed up this problem as I did not fully understand the question and was forced to select a random answer and hope for the best. The third question was involving electric units and math in general. I again did not fully understand and botched the math in this, ruining the answer. The fourth question was about the internet and transmission and I was in the wrong as I made a silly mistake in understanding how the internet worked and the fact that information could be received by a device in any order for using the internet. The fifth and sixth questions were destroyed by my simple mind due to silly mistakes. .",
            "url": "https://henerystone.github.io/ws2/2022/11/07/Quiz.html",
            "relUrl": "/2022/11/07/Quiz.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Night At The Museum",
            "content": "At the Night at the Museum, we explored the exciting world of computer science and art in a fun presentation form. One of the best projects I saw was a computer science project that used APIs to run an Alarm Clock with a stopwatch and time relevant to many different time zones. The most exciting thing about this project was that its APIs were actually created by the group itself. This project was a combination of creativity and collaboration. Another project that caught my eye was an art project. . In the center of this panel, there is a very detailed scene of a patient and some doctors. This scene is incredibly detailed, looking like a window into another room with this happening. .",
            "url": "https://henerystone.github.io/ws2/2022/11/07/Night-at-the-Museum.html",
            "relUrl": "/2022/11/07/Night-at-the-Museum.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Javascript and Chess",
            "content": "function type(output){ console.log(output); } function Chess(name, rank, yrsplay){ this.name = name; this.rank = rank; this.yrsplay = yrsplay; this.exp = &quot;&quot; } Chess.prototype.setExp = function(exp){ this.exp = exp; } Chess.prototype.toJSON = function(){ const obj = {name: this.name, rank: this.rank, yrsplay: this.yrsplay, exp: this.exp}; const json = JSON.stringify(obj); return json; } var chess_players = [ new Chess(&quot;Magnus Carlsen&quot;,2856, 26), new Chess(&quot;Ding Liren&quot;,2811,13), new Chess(&quot;Ian Nepomniachtchi&quot;,2793,28), ]; function Leaderboard(chess_play){ chess_play.setExp(&quot;Grandmaster&quot;); this.chess_play = chess_play; this.Leaderboard = [chess_play]; this.json = []; this.classroom.forEach(Chess =&gt; this.json.push(Chess.toJSON())); } leaders = new Leaderboard(chess_players) Chess.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Rank&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Years Played&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Experience&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of leaders.classroom) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.rank + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.yrsplay + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.exp + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(leaders._toHtml()); . evalmachine.&lt;anonymous&gt;:30 chess_play.setExp(&#34;Grandmaster&#34;); ^ TypeError: chess_play.setExp is not a function at new Leaderboard (evalmachine.&lt;anonymous&gt;:30:14) at evalmachine.&lt;anonymous&gt;:39:11 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) .",
            "url": "https://henerystone.github.io/ws2/chesscode/javascript",
            "relUrl": "/chesscode/javascript",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Dictionary but Chess",
            "content": "InfoDb = [] Name = input(&quot;First Name: &quot;) Lastn = input(&quot;Last Name: &quot;) rank = input(&quot;What is your chess ranking? &quot;) # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: Name, &quot;LastName&quot;: Lastn, &quot;Ranking&quot;: [rank] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Barry&quot;, &quot;LastName&quot;: &quot;Smith&quot;, &quot;Class&quot;: &quot;APCSP&quot;, &quot;Grade&quot;: &quot;Freshman&quot;, &quot;Favorite Food&quot;: [&quot;Pizza&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;g&#39;, &#39;LastName&#39;: &#39;h&#39;, &#39;Ranking&#39;: [&#39;k&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;Class&#39;: &#39;APCSP&#39;, &#39;Grade&#39;: &#39;Freshman&#39;, &#39;Favorite Food&#39;: [&#39;Pizza&#39;]}] .",
            "url": "https://henerystone.github.io/ws2/chesscode/info",
            "relUrl": "/chesscode/info",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Chess Guide",
            "content": "This is a guide on how to play chess. . Chess is an incredibly strategic game that is played by millions of people world wide. Chess can get incredibly advanced but one must start with the basics. .",
            "url": "https://henerystone.github.io/ws2/chess/instruct",
            "relUrl": "/chess/instruct",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Chess is cool",
            "content": "toc: true | comments: true | permalink: /chesscode/cool | categories: [chesscode] | . Chess is cool . This is a Chess quiz: 3 questions shall be asked. Try to get them all correct. . import getpass, sys def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg rsp = question_with_response(&quot;What is a king?&quot;) if rsp == &quot;main piece in chess&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(&quot;That is incorrect!&quot;) rsp = question_with_response(&quot;Where is the queen placed?&quot;) if rsp == &quot;next to the king&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(&quot;That is incorrect!&quot;) rsp = question_with_response(&quot;Where is the rook placed?&quot;) if rsp == &quot;at the ends of the board&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(&quot;That is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, shreyas running /home/shreyas/anaconda3/bin/python You will be asked 3 questions. Question: Are you ready to take a test? Answer: yes Question: What is a king? That is incorrect! Question: Where is the queen placed? That is incorrect! Question: Where is the rook placed? That is incorrect! shreyas you scored 0/3 .",
            "url": "https://henerystone.github.io/ws2/2022/11/07/Bash_note.html",
            "relUrl": "/2022/11/07/Bash_note.html",
            "date": " • Nov 7, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://henerystone.github.io/ws2/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 0 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter a is the 0 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 1): evens.append(numbers[i]) print(evens) . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 1 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i-1] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i-1] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [3, 5, 6, 7, 9, 11, 11, 13, 15, 16, 17, 19, 21, 21, 23, 25, 26, 27, 29, 31, 31, 33, 35, 36, 37, 39, 41, 41, 43, 45, 46, 47, 49, 51, 51, 53, 55, 56, 57, 59, 61, 61, 63, 65, 66, 67, 69, 71, 71, 73, 75, 76, 77, 79, 81, 81, 83, 85, 86, 87, 89, 91, 91, 93, 95, 96, 97, 99] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) if item ==&quot;burger&quot;: total+=3.99 elif item==&quot;fries&quot;: total+=1.99 elif item==&quot;drink&quot;: total+=0.99 else: print(&quot;what?&quot;) #code should add the price of the menu items selected by the user print(&quot;Total price - &quot;total) . Menu burger $3.99 fries $1.99 drink $0.99 3.99 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://henerystone.github.io/ws2/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Psycology and the good life",
            "content": "The video talks about stress in a college environment and how to relive the stress that occurs. Stress is most common in college students due to the fact that they are ovewhelmed and anxious. To relive stress, one must take a break from their daily life and take some time to do what one loves. I personally like to take time to read a book or play video games. This helps me relax and destress myself .",
            "url": "https://henerystone.github.io/ws2/psycology/other",
            "relUrl": "/psycology/other",
            "date": " • Sep 14, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Chess",
          "content": "Chess is cool This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://henerystone.github.io/ws2/chess/",
          "relUrl": "/chess/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Chess points",
          "content": "Introduction to Points of Chess Pieces . These are the points offered by the capture of each chess piece. . Piece/Point King Queen Rook Knight Bishop Pawn . Points | Infinity - you win! | 9 points | 5 points | 3 points | 3 points | 1 point | .",
          "url": "https://henerystone.github.io/ws2/chessp",
          "relUrl": "/chessp",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "This is a website centered on chess. I like chess. Chess is cool. Currently, I am a student at Del Norte High School. This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://henerystone.github.io/ws2/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://henerystone.github.io/ws2/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}