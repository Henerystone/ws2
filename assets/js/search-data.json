{
  
    
        "post0": {
            "title": "Chess Quiz two",
            "content": "Quiz = ({ &quot;How many spaces can a pawn move on its first turn?&quot;: &quot;2&quot;, &quot;How many spaces can a pawn move on its second turn?&quot;: &quot;1&quot;, &quot;How many pawns exist on one side inn a chess game?&quot;: &quot;8&quot; }) correct = 0 for key, value in Quiz.items(): questions = input(key) if questions == value: print(&quot;Correct&quot;) correct+=1 else: print(&quot;Incorrect&quot;) print(&quot;Score: &quot;,correct) .",
            "url": "https://henerystone.github.io/ws2/chesscode/chessquiz",
            "relUrl": "/chesscode/chessquiz",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Bash Tutorial",
            "content": "Prerequisites for Bash on Jupyter . Being able to find a Bash Reference. Here is a Bash Cheat Sheet&gt; Install the Bash Kernel for Jupyter notebooks. Expectations are pip3 and python3 are defined within the path. The bash shell allowed construction of this tutorial. . pip install bash_kernel | python -m bash_kernel.install | . Selecting a kernel in &quot;code --project--&quot; or &quot;jupyter notebook --file.ipynb--&quot; that have bash in options. . Prerequisites for Project Directory . Practice pulling code from git to your machine. This will create a project directory and add APCSP github project to the directory. There is conditional logic to make sure that directory and pull only happen if it does not (!) exist. . Hack:Change variables, make new directory, clone to that directory. | . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Look inside Fastpages/Github page project . All computers contain files and directories. The clone brought more files from cloud to your machine. Using the bash shell you will see some commands that show and interact with files and directories. . &quot;ls&quot; lists computer files in Unix and Unix-like operating systems | &quot;cd&quot; offers way to navigate and change working directory | &quot;pwd&quot; print working directory | &quot;echo&quot; used to display line of text/string that are passed as an argument | . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look inside a Markdown File . &quot;cat&quot; reads data from the file and gives its content as output . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . Env, Git and GitHub . Env(ironment) is used to capture things like path to Code or Home directory. Git and GitHub is NOT Only used to exchange code between individuals, it is often used to exchange code through servers, in our case deployment for Website. All tools we use have a behind the scenes hav relationship with the system they run on (MacOS, Windows, Linus) or a relationship with servers which they are connected to (ie GitHub). There is an &quot;env&quot; command in bash. There are environment files and setting files (.git/config) for Git. They both use a key/value concept. . &quot;env&quot; show setting for your shell | &quot;git clone&quot; sets up a director of files | &quot;cd $project&quot; allows user to move inside that directory of files | &quot;.git&quot; is a hidden directory that is used by git to establish relationship between machine and the git server on GitHub. | . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . Student Request - Make a file in Bash . This example was requested by a student (Jun Lim, CSA). The request was to make jupyer file using bash, I adapted the request to markdown. This type of thought will have great extrapolation to coding and possibilities of using List, Arrays, or APIs to build user interfaces. JavaScript is a language where building HTML is very common. . To get more interesting output from terminal, this will require using something like mdless (https://github.com/ttscoff/mdless). This enables see markdown in rendered format.- On Desktop Install PKG from MacPorts . In Terminal on MacOS Install ncurses | gem install mdless | . | . Output of the example is much nicer in &quot;jupyter&quot; . cd /tmp file=&quot;sample.md&quot; if [ -f &quot;$file&quot; ]; then rm $file fi tee -a $file &gt;/dev/null &lt;&lt;EOF # Show Generated Markdown This introductory paragraph and this line and the title above are generated using tee with the standard input (&lt;&lt;) redirection operator. - This bulleted element is still part of the tee body. EOF echo &quot;- This bulleted element and lines below are generated using echo with standard output (&gt;&gt;) redirection operator.&quot; &gt;&gt; $file echo &quot;- The list definition, as is, is using space to seperate lines. Thus the use of commas and hyphens in output.&quot; &gt;&gt; $file actions=(&quot;ls,list-directory&quot; &quot;cd,change-directory&quot; &quot;pwd,present-working-directory&quot; &quot;if-then-fi,test-condition&quot; &quot;env,bash-environment-variables&quot; &quot;cat,view-file-contents&quot; &quot;tee,write-to-output&quot; &quot;echo,display-content-of-string&quot; &quot;echo_text_&gt; $file,write-content-to-file&quot; &quot;echo_text_&gt;&gt; $file,append-content-to-file&quot;) for action in ${actions[@]}; do # for loop is very similar to other language, though [@], semi-colon, do are new action=${action//-/ } # convert dash to space action=${action//,/: } # convert comma to colon action=${action//_text_/ &quot;sample text &quot; } # convert _text_ to sample text, note escape character to avoid &quot;&quot; having meaning echo &quot; - ${action//-/ }&quot; &gt;&gt; $file # echo is redirected to file with &gt;&gt; done echo &quot;&quot; echo &quot;File listing and status&quot; ls -l $file # list file wc $file # show words mdless $file # this requires installation, but renders markown from terminal rm $file # clean up termporary file . Hacks . Go back to some of the deployment procedures and think about some thing you could verify through Bash notebook. . Is there anything we use to verify tools we install? Think about versions. | Is there anything we could verify with Anaconda? | How would you update a repository? | Really cool would be automating a procedure from installation. | .",
            "url": "https://henerystone.github.io/ws2/techtalk/bash",
            "relUrl": "/techtalk/bash",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Vocab",
            "content": "Algorithm: At its core, an algorithm is really just a generalized, conceptual solution to a problem that can later be implemented in some real-world form like a computer program. . Application Program Interface : Application program interface (API) is a set of routines, protocols, and tools for constructing software applications. An API specifies how software components should interact. In addition, APIs are used when programming graphical user interface (GUI) components. . Binary : A numeric system of base 2 that only uses combinations of the digits zero and one; this is used in one of the lowest levels of abstraction. Computers operate in binary, as they store data and perform calculations using only zeros and ones. While a single binary digit can be used to represent True (1) or False (0) in boolean logic, multiple binary digits can be used in conjunction to store large numbers and perform complex functions. Computers translate between binary and what you actually work with such as numbers and text. .",
            "url": "https://henerystone.github.io/ws2/2022/09/11/Vocab.html",
            "relUrl": "/2022/09/11/Vocab.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "App Chess quiz",
            "content": "This is a Chess quiz made in Code.org with javascript block code. The chess quiz is a quiz about some of the more advanced principles of chess. It questions the user about all the advanced aspects of chess and some more. The quiz contains 3 questions with interesting pictures and backgrounds, offering a scam prize at the end. A fun and interactive quiz to waste time with. . !(Chess_quiz.png) .",
            "url": "https://henerystone.github.io/ws2/chesscode/app",
            "relUrl": "/chesscode/app",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Dictionary but Chess",
            "content": "InfoDb = [] Name = input(&quot;First Name: &quot;) Lastn = input(&quot;Last Name: &quot;) rank = input(&quot;What is your chess ranking? &quot;) # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: Name, &quot;LastName&quot;: Lastn, &quot;Ranking&quot;: [rank] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Barry&quot;, &quot;LastName&quot;: &quot;Smith&quot;, &quot;Class&quot;: &quot;APCSP&quot;, &quot;Grade&quot;: &quot;Freshman&quot;, &quot;Favorite Food&quot;: [&quot;Pizza&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;g&#39;, &#39;LastName&#39;: &#39;h&#39;, &#39;Ranking&#39;: [&#39;k&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;Class&#39;: &#39;APCSP&#39;, &#39;Grade&#39;: &#39;Freshman&#39;, &#39;Favorite Food&#39;: [&#39;Pizza&#39;]}] .",
            "url": "https://henerystone.github.io/ws2/chesscode/info",
            "relUrl": "/chesscode/info",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Chess Guide",
            "content": "This is a guide on how to play chess. . Chess is an incredibly strategic game that is played by millions of people world wide. Chess can get incredibly advanced but one must start with the basics. .",
            "url": "https://henerystone.github.io/ws2/chess/instruct",
            "relUrl": "/chess/instruct",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Chess is cool",
            "content": "toc: true | comments: true | permalink: /chesscode/cool | categories: [chesscode] | . Chess is cool . This is a Chess quiz: 3 questions shall be asked. Try to get them all correct. . import getpass, sys def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg rsp = question_with_response(&quot;What is a king?&quot;) if rsp == &quot;main piece in chess&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(&quot;That is incorrect!&quot;) rsp = question_with_response(&quot;Where is the queen placed?&quot;) if rsp == &quot;next to the king&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(&quot;That is incorrect!&quot;) rsp = question_with_response(&quot;Where is the rook placed?&quot;) if rsp == &quot;at the ends of the board&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(&quot;That is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, shreyas running /home/shreyas/anaconda3/bin/python You will be asked 3 questions. Question: Are you ready to take a test? Answer: yes Question: What is a king? That is incorrect! Question: Where is the queen placed? That is incorrect! Question: Where is the rook placed? That is incorrect! shreyas you scored 0/3 .",
            "url": "https://henerystone.github.io/ws2/2022/09/11/Bash_note.html",
            "relUrl": "/2022/09/11/Bash_note.html",
            "date": " • Sep 11, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Chess",
          "content": "Chess is cool This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://henerystone.github.io/ws2/chess/",
          "relUrl": "/chess/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Chess points",
          "content": "Introduction to Points of Chess Pieces . These are the points offered by the capture of each chess piece. . Piece/Point King Queen Rook Knight Bishop Pawn . Points | Infinity - you win! | 9 points | 5 points | 3 points | 3 points | 1 point | .",
          "url": "https://henerystone.github.io/ws2/chessp",
          "relUrl": "/chessp",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "This is a website centered on chess. I like chess. Chess is cool. Currently, I am a student at Del Norte High School. This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://henerystone.github.io/ws2/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://henerystone.github.io/ws2/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}